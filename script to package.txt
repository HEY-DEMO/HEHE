param (
    [string]$solutionRoot = ".",
    [string]$configFileName = "app.config"  # or "web.config"
)

# Find all packages.config files recursively
$packagesFiles = Get-ChildItem -Path $solutionRoot -Recurse -Filter "packages.config"

if ($packagesFiles.Count -eq 0) {
    Write-Error "No packages.config files found."
    exit 1
}

foreach ($pkgFile in $packagesFiles) {
    $projectDir = $pkgFile.Directory.FullName
    $configPath = Join-Path $projectDir $configFileName

    if (!(Test-Path $configPath)) {
        Write-Warning "$configFileName not found in $projectDir - skipping."
        continue
    }

    # Load package versions
    [xml]$packagesXml = Get-Content $pkgFile.FullName
    $packageVersions = @{}
    foreach ($pkg in $packagesXml.packages.package) {
        $packageVersions[$pkg.id] = $pkg.version
    }

    # Load config XML
    [xml]$configXml = Get-Content $configPath
    $namespaceManager = New-Object System.Xml.XmlNamespaceManager($configXml.NameTable)
    $namespaceManager.AddNamespace("asm", "urn:schemas-microsoft-com:asm.v1")

    # Update binding redirects
    $bindingRedirects = $configXml.SelectNodes("//asm:assemblyBinding/asm:dependentAssembly", $namespaceManager)
    $changesMade = $false

    foreach ($binding in $bindingRedirects) {
        $assemblyName = $binding.assemblyIdentity.name
        $redirectNode = $binding.bindingRedirect

        if ($packageVersions.ContainsKey($assemblyName)) {
            $newVersion = $packageVersions[$assemblyName]
            $oldVersion = $redirectNode.oldVersion
            $redirectNode.newVersion = $newVersion
            $redirectNode.oldVersion = "0.0.0.0-$newVersion"
            Write-Host "[$configFileName] $assemblyName => $newVersion"
            $changesMade = $true
        }
    }

    if ($changesMade) {
        $configXml.Save($configPath)
        Write-Host "Updated: $configPath"
    } else {
        Write-Host "No changes needed in: $configPath"
    }
}

-----------------------------------------------------------------------------------------------------

 How to Use
Save this script as Update-BindingRedirect.ps1

Open PowerShell and run:



.\Update-BindingRedirect.ps1 -projectDir "C:\Path\To\Your\Project" -configFileName "app.config"


ðŸ§  Notes:
It assumes the assembly name in packages.config matches what's in assemblyIdentity name.

It updates oldVersion to cover any lower version (0.0.0.0-newVersion), which is common for redirects.

Make a backup of your config file before running, especially in large solutions.

